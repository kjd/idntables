default namespace = "http://www.iana.org/lgr/0.1"

# SIMPLE TYPES

language-tag = text       # RFC 5646 language tag (e.g. "de", "Latn", etc.)
domain-name = text        # Domain name
code-point = text         # A single codepoint, expressed as a hexidecimal number
variant-condition = text  # A condition for applying the variant (TBD)
tag = text                # Freeform text tag

# STRUCTURES

# Representation of a single codepoint

point-single = element char {
	attribute cp { code-point },
	attribute tag { tag },
	attribute ref { text }?,
	point-variant*
}

# Representation of a code point variant

point-variant = element var {
	attribute cp { code-point },
	attribute type { text }?,
	attribute when { variant-condition }?,
	attribute comment { text }?,
	attribute disposition { text }?,
	attribute ref { text }?
}

# Representation of a range of codepoints

point-multiple = element range {
	attribute first-cp { code-point },
	attribute last-cp { code-point },
	text
}

logical-operators = (
    element not { class-points } | element union { class-points+ } | element intersection { class-points+ }
        | element difference { class-points+ } | element symmetric-difference { class-points+ }
)
# A collection of codepoints and ranges of codepoints that comprise
# a label generation ruleset

points = (point-single | point-multiple)+
class-points = (point-single | point-multiple | logical-operators )

any = element any {
	attribute count { text }?
}
class = element class {
	attribute count { text }?,
	attribute name { text }?,
	attribute comment { text }?,
	attribute ref { text }?,
	attribute property { text }?,
	( class-points | text )
}
choice = element choice {
	attribute count { text }?,
	class-matchers+
}
class-matchers = ( class | any | choice )+

rules-declaration = element rule {
	attribute name { text },
	class-matchers+
}
action-declaration = element action {
	attribute action { text },
	( attribute match { text } | attribute not-match { text } )
}

# DOCUMENT STRUCTURE

# Main document structure, comprised of a meta section followed by
# a data section.

start = lgr
lgr = element lgr {
	attribute id { text },
	meta-section?,
	data-section,
	rules-section?
}

# Meta section - information recorded with an label generation ruleset that does not
# affect machine processing.

meta-section = element meta {
	(
		element version { text }? |
		element date { text }? |
		element language { language-tag }* |
		element domain { domain-name }* |
		element validity-start { text }? |
		element validity-end { text }? |
		element unicode-version { text }? |
		element description {
			attribute type { text },
			text
		}* |
		element references {
		    element reference {
		        attribute id { text },
		        text
		    }*
		}?
	)*
}

# Data section - the actual code point data of the table.

data-section = element data {
	points
}

# Rules section

rules-section = element rules {
	( rule-declaration | action-declaration )*
}
